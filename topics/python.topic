-- title: python
-- descr: python language cheatsheet
-- items: pdb logger format virtualenv argparse dis datetime timedelta
-- keywords: pip
=====================================================================================================================================================
= logging tree =                      |= debug =                  |= virtualenv =                   |= datetime =
> report logging configuration        |> local, terminal          |$ virtualenv -p python3 env      | datetime.utcnow()  <- naive
$ pip install logging_tree            |import pdb                 |$ . env/bin/activate             | datetime.now()     <- naive, produce good
import logging_tree                   |pdb.set_trace()            |$ pip install ...                |                    <- timestamp
logging_tree.printout()                                                                             | datetime.now(tz)   <- tz-aware
--------------------------------------------------------------------------------------------------- | dt.astimezone()  <- good tz-aware, local tz
= logging =                                    |= formatting =                                      |                  <- works with naive in 3.6+
logging.basicConfig(level=logging.DEBUG)       |"{x: 6.2f}"   7.   <- '  7.00'                      | local_tz_obj = datetime.now(
> methods                                      |"{x: 6}"     21    <- '    21'                      |     datetime.timezone.utc
10 logger.debug                                |"{x:06}"     21    <- '000021'                      | ).astimezone().tzinfo  <- local timezone obj!
20 logger.info                                 |
30 logger.warning                              |"{x:6}"      "xyz" <- 'xyz   '                      | dt.isoformat() -> str
40 logger.error                                |"{x:^6}"     "xyz" <- ' xyz  '                      | datetime.fromisoformat(str)
50 logger.critical                             |"{x:_>6}"    "xyz" <- '___xyz'
logger.exception <- only in exc handlers       |"{x=!r:^6}"  "xyz" <- "x='xyz' "                    | datetime.timedelta(
                                               |"{x=}"       "xyz" <- "x=xyz"                       |     days=0, seconds=0, milliseconds=0,
------------------------------------------------------------------------------                      |     nimutes=0, hours=0, weeks=0)
= argparse with subcommands =                                                                       |
parser = argparse.ArgumentParser(description="App descr")
subparsers = parser.add_subparsers(dest='command', help="Available commands")                       |= disassemble =
sub_p_01 = subparsers.add_parser("a", help="descr of cmd 01")                                       | import dis
...                                                                                                 | dis.dis(my_func)
sub_p_02 = subparsers.add_parser("b", help="descr of cmd 02")                                       |
sub_p_02.add_argument("arg_name", help="specific for cmd 02")                                       |= misc =
                                                                                                    | super().__init__(args)
                                                                                                    | d2 = {**d0, **d1}
p = re.compile(r"^prefix_(?P<n1>\d).(\w*).suffix$")
p.match(s, [start_pos, end_pos])   <- if s matches from start
