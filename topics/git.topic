-- title: git
-- descr: git and related commands
-- keywords: git
=====================================================================================================================================================
= ~/.gitconfig =
[format]
	pretty = tformat:%C(yellow)%H %C(blue)%<(21)%ad%C(green)%<(20)%an%C(yellow)%d%C(white)%s%C(reset)
[log]
	date = format:%Y-%m-%d %H:%M:%S
[core]
	excludesfile = ~/.gitignore_global  <- if can't touch .gitignore
	editor = vim
	pager =
=====================================================================================================================================================
= Common operation =                                                      |> checkout older version or forom different branch
> amend options                                                           |$ git checkout {revision} -- path/to/file  <- no revision = staging area
$ git commit --amend --no-edit --date=now                                 |
> fetch and merge other branch                                            |> show file from different branch
$ git fetch origin master:master  <- {remote_name}:{local_name}           |$ git show branch:file
> cleanup obsolete branches                                               |
$ git fetch origin --prune                                                |= Vim tricks =
                                                                          |> View older version of file:
= submodules =                                                            |:Gedit / :Gsplit / :Gvsplit {revision}:{filename}
$ git submodule update --recursive                                        |
$ git submodule foreach --recursive git diff --name-status                |==========================================================================
                                                                          |= reflog =                       |= stash =
= Rebase tricks =                                                         |$ git reflog show -n10           |$ git stash [save "descr"]
> update commit time (and rename) during rebase                           |                                 |$ git stash list
$ git rebase -i HEAD~5 --exec "git commit --amend --date=now --no-edit"   |                                 |$ git stash pop
> produces todo-list like                                                 |                                 |$ git stash drop stash@{0}
pick 8d7c8b7 old_descr                                                    |                                 |$ git stash show -p | git apply
$ exec git commit --amend --date=now --no-edit <- or -m"new descr"        |==========================================================================
...                                                                          |= merge conflict =
                                                                             |$ git checkout release/7.25
= log =                                                                      |$ git checkout -b fix_conflict
$ git log -G'pattern' -- path/to/file <- commits that contain 'pattern'      |$ git merge origin/release/7.20
$ git log -S'pattern' -- path/to/file <- .. changed number of occurencies    |... fix conflicts
$ git log -n10 current..other                  <- commits in 'other' branch  |$ git checkout --ours file   <- keep file as it is in 7.25
$ git log -n10 current..other -- path/to/file  <- only affecting file        |$ git checkout --theirs file
$   .. --pretty=[oneline,short,medium,full,fuller,reference,email,raw]       |$ git commit
= show hashes of files =                                                     |$ git push --set-upstream origin fix_conflict
$ git ls-files -s path/to/files
