-- title: bash
-- descr: bash language cheatsheet
=============================================================================================================
= color ansi sequences =                                               |= color in .sh=
           Colors         "\033[....m"  <- common format               |red=$'\033[1;31m'
BLACK    : "\033[1;30m"         ....    <- ;-delimited list of ints    |PS1+='${red}some red${end}
RED      : "\033[1;31m"      0      <- clear all formatting|=================================================
GREEN    : "\033[1;32m"      1,22,2 <- bold, normal, faint | ${name}  <- $name
YELLOW   : "\033[1;33m"      4,24   <- underline, off      | ${name:-dflt_val}
BLUE     : "\033[1;34m"      5      <- blink               | ${name:?msg_to_die_with}
MAGENTA  : "\033[1;35m"      9      <- crossed             | ${name:+word} <- return word if name exists
CYAN     : "\033[1;36m"      30-37  <- fg color (rgb)      | ${name:=word} <- set $name to word if undefined
WHITE    : "\033[1;37m"      40-47  <- bg color (rgb)      | $(  ) ==  `   `  <- command substitution
                             38,48  <- 256 fg/bg colors:   | [  ]   <- condition
 <- 38;5;N  N=(36*r + 6*g + b + 16) N(231-255) - grayscale | [[ ]]  <- adv. conditions
CLREND   : "\033[0m"                                       | (( ))  <- num. conditions
=============================================================================================================
= for loop =                             |= debug =  |= sudo with wildcards =
for i in {1..10}; do some command; done  |set -x     |sudo sh -c 'du -hs /var/lib/docker/*'
for i in {1..10}                         |..code..   |= measure time =
do                                       |set +x     |$ time command...
  some command                           |
done                                     |
= options =
set -euo pipefal
- -e <- stop on errors
- -u <- fail on unbound variables
- -o pipefail  <- catch errors in piped commands

= create 4*7 dirs =
mkdir -p roles/{dep{1..3},master}/{files,templates,defaults,meta,handlers,vars,tasks}

= bashrc =
> do not save into history commands starting with ' ' and duplicates:
export HISTCONTROL=ignoreboth
bash -o pipefail  <- pipeline of several commands return last non-zero exit code
